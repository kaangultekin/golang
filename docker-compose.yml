version: '3'
services:
  app:
    container_name: golang
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - "8090:3000"
    volumes:
      - .:/go/src/app
    depends_on:
      - postgres
    command: sh run.sh
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - ${REDIS_PORT}:${REDIS_MAIN_PORT}
    volumes:
      - ./redis-data:/data
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    ports:
      - "${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.8.1
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    environment:
      - elasticsearch.hosts=["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
      - "ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}"
      - "ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}"
    depends_on:
      - elasticsearch
    restart: always
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12-management
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_WEB_PORT}:${RABBITMQ_WEB_PORT}"
    environment:
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}"
      - "RABBITMQ_MANAGEMENT_PLUGIN=${RABBITMQ_MANAGEMENT_PLUGIN}"
    restart: always